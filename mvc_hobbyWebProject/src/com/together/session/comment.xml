<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.together.vo.CommentVO">
	
	<!-- 댓글을 저장한다. -->
	<insert id="regist" parameterType="cmtVO">
		<selectKey keyProperty="cmtID" resultType="int" order="BEFORE">
	        SELECT COALESCE(MAX(cmtID), 0) + 1 FROM comment
	    </selectKey>
		insert into comment (cmtID, boardID, userID , cmtContent, cmtAvailable, cmtDate) 
		values (#{cmtID}, #{boardID}, #{userID} , #{cmtContent}, 1, now())
	</insert>
	
	<!-- 하나의 글에 저장된 댓글의 개수를 얻어온다. -->
	<select id="selectCount" parameterType="int" resultType="int">
		select count(*) from comment where boardID = #{boardID}
	</select>
	<!-- 해당 글의 댓글 목록을 가져온다 -->
	<select id="selectCmtList" parameterType="java.util.ArrayList" resultType="cmtVO">
		select * from comment where boardID = #{boardID} and cmtAvailable = 1 order by cmtID desc
	</select>
	<!-- 댓글 1건을 얻어온다. -->
	<select id="getCmtVO" parameterType="int" resultType="cmtVO">
		select * from comment where cmtID = #{cmtID}
	</select>
	<!-- 1페이지 분량의 글 목록을 얻어온다. 
	<select id="selectList" parameterType="java.util.HashMap" resultType="vo">
		<![CDATA[
		select * from (
			select rownum rnum, TT.* from (
				select * from board as b order by gup desc, seq asc
			) TT where rownum <= #{endNo}
		) where rnum >= #{startNo}
		]]>
	</select>
	-->
	
	<!-- 댓글 1건을 삭제한다. -->
	<delete id="cmtDelete" parameterType="int"  >
		delete from comment where cmtID = #{cmtID}
	</delete>

	<!-- 답글이 삽입될 위치를 확보하기 위해 조건에 만족하는 seq를 1씩 증가시킨다. 
	<update id="incrementSeq" parameterType="java.util.HashMap">
		update board set seq = seq + 1 where gup = #{gup} and seq >= #{seq}
	</update>
	-->
	<!-- 답글을 저장한다
	<insert id="insertReply" parameterType="vo">
		insert into board (idx, name, subject, content, gup, lev, seq) 
		values (create_sequnece.nextval(), #{name}, #{subject}, #{content}, #{gup}, #{lev}, #{seq})
	</insert>
	-->
</mapper>














